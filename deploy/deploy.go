package deploy

import (
	"context"
	"fmt"
	"strings"

	"github.com/bang9ming9/bm-cli-tool/cmd/flags"
	gov "github.com/bang9ming9/bm-governance/types"
	utils "github.com/bang9ming9/go-hardhat/bms/utils"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/ethclient"
	"github.com/urfave/cli/v2"
)

const (
	BmErc721Bin string = `0x60a060405234801562000010575f80fd5b50604051620023bc380380620023bc833981016040819052620000339162000216565b8382825f6200004383826200032b565b5060016200005282826200032b565b5050506001600160a01b0381166200008457604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6200008f81620000e8565b506001600160a01b038316620000d35760405163322b8a6760e11b81526020600482015260076024820152666572633131353560c81b60448201526064016200007b565b50506001600160a01b031660805250620003f7565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b80516001600160a01b038116811462000150575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011262000179575f80fd5b81516001600160401b038082111562000196576200019662000155565b604051601f8301601f19908116603f01168101908282118183101715620001c157620001c162000155565b8160405283815260209250866020858801011115620001de575f80fd5b5f91505b83821015620002015785820183015181830184015290820190620001e2565b5f602085830101528094505050505092915050565b5f805f80608085870312156200022a575f80fd5b620002358562000139565b9350620002456020860162000139565b60408601519093506001600160401b038082111562000262575f80fd5b620002708883890162000169565b9350606087015191508082111562000286575f80fd5b50620002958782880162000169565b91505092959194509250565b600181811c90821680620002b657607f821691505b602082108103620002d557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200032657805f5260205f20601f840160051c81016020851015620003025750805b601f840160051c820191505b8181101562000323575f81556001016200030e565b50505b505050565b81516001600160401b0381111562000347576200034762000155565b6200035f81620003588454620002a1565b84620002db565b602080601f83116001811462000395575f84156200037d5750858301515b5f19600386901b1c1916600185901b178555620003ef565b5f85815260208120601f198616915b82811015620003c557888601518255948401946001909101908401620003a4565b5085821015620003e357878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b608051611f9e6200041e5f395f81816103a701528181610765015261088b0152611f9e5ff3fe608060405234801561000f575f80fd5b50600436106101c6575f3560e01c806377097fc8116100fe578063b88d4fde1161009e578063dfe28fbf1161006e578063dfe28fbf146103dc578063e985e9c5146103ef578063f2fde38b14610402578063f4c3b4d714610415575f80fd5b8063b88d4fde14610380578063c662e48114610393578063c766c114146103a2578063c87b56dd146103c9575f80fd5b80638da5cb5b116100d95780638da5cb5b1461034157806395d89b4114610352578063a22cb4651461035a578063b4b5b48f1461036d575f80fd5b806377097fc8146102f9578063789646dd1461030c5780638623d4da1461031f575f80fd5b806342842e0e1161016957806355f804b31161014457806355f804b3146102b85780636352211e146102cb57806370a08231146102de578063715018a6146102f1575f80fd5b806342842e0e1461027f57806342966c68146102925780634f6ccce7146102a5575f80fd5b8063095ea7b3116101a4578063095ea7b31461023257806318160ddd1461024757806323b872dd146102595780632f745c591461026c575f80fd5b806301ffc9a7146101ca57806306fdde03146101f2578063081812fc14610207575b5f80fd5b6101dd6101d83660046116bc565b610437565b60405190151581526020015b60405180910390f35b6101fa610461565b6040516101e99190611724565b61021a610215366004611736565b6104f0565b6040516001600160a01b0390911681526020016101e9565b610245610240366004611768565b610517565b005b6008545b6040519081526020016101e9565b610245610267366004611790565b610526565b61024b61027a366004611768565b6105b4565b61024561028d366004611790565b610617565b6102456102a0366004611736565b610636565b61024b6102b3366004611736565b610641565b6102456102c6366004611863565b610696565b61021a6102d9366004611736565b6106aa565b61024b6102ec3660046118a8565b6106b4565b6102456106f9565b610245610307366004611906565b61070c565b61024561031a3660046119cb565b6107c9565b6101dd61032d366004611736565b600f6020525f908152604090205460ff1681565b600a546001600160a01b031661021a565b6101fa61090d565b610245610368366004611a5f565b61091c565b6101fa61037b366004611736565b610927565b61024561038e366004611a90565b6109be565b61024b6706f05b59d3b2000081565b61021a7f000000000000000000000000000000000000000000000000000000000000000081565b6101fa6103d7366004611736565b6109d5565b6102456103ea366004611b07565b610a3a565b6101dd6103fd366004611b28565b610aa8565b6102456104103660046118a8565b610ad5565b6101dd610423366004611736565b600d6020525f908152604090205460ff1681565b5f6001600160e01b0319821663780e9d6360e01b148061045b575061045b82610b12565b92915050565b60605f805461046f90611b50565b80601f016020809104026020016040519081016040528092919081815260200182805461049b90611b50565b80156104e65780601f106104bd576101008083540402835291602001916104e6565b820191905f5260205f20905b8154815290600101906020018083116104c957829003601f168201915b5050505050905090565b5f6104fa82610b61565b505f828152600460205260409020546001600160a01b031661045b565b610522828233610b99565b5050565b6001600160a01b03821661055457604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f610560838333610ba6565b9050836001600160a01b0316816001600160a01b0316146105ae576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161054b565b50505050565b5f6105be836106b4565b82106105ef5760405163295f44f760e21b81526001600160a01b03841660048201526024810183905260440161054b565b506001600160a01b03919091165f908152600660209081526040808320938352929052205490565b61063183838360405180602001604052805f8152506109be565b505050565b6105225f8233610ba6565b5f61064b60085490565b82106106735760405163295f44f760e21b81525f60048201526024810183905260440161054b565b6008828154811061068657610686611b88565b905f5260205f2001549050919050565b61069e610c82565b600c6105228282611be0565b5f61045b82610b61565b5f6001600160a01b0382166106de576040516322718ad960e21b81525f600482015260240161054b565b506001600160a01b03165f9081526003602052604090205490565b610701610c82565b61070a5f610caf565b565b825f0361072c57604051636a30998f60e01b815260040160405180910390fd5b5f33604051637a94c56560e11b81526001600160a01b038083166004830152602482018790526706f05b59d3b2000060448301529192507f00000000000000000000000000000000000000000000000000000000000000009091169063f5298aca906064015f604051808303815f87803b1580156107a8575f80fd5b505af11580156107ba573d5f803e3d5ffd5b505050506105ae818484610d00565b82515f8190036108065760405163322b8a6760e11b8152602060048201526007602482015266616d6f756e747360c81b604482015260640161054b565b5f805b828110156108405785818151811061082357610823611b88565b6020026020010151826108369190611cb0565b9150600101610809565b506706f05b59d3b20000811461087a576040516339dbc25d60e11b8152600481018290526706f05b59d3b20000602482015260440161054b565b604051631ac8311560e21b815233907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636b20c454906108cc9084908b908b90600401611cfd565b5f604051808303815f87803b1580156108e3575f80fd5b505af11580156108f5573d5f803e3d5ffd5b50505050610904818686610d00565b50505050505050565b60606001805461046f90611b50565b610522338383610dba565b600e6020525f90815260409020805461093f90611b50565b80601f016020809104026020016040519081016040528092919081815260200182805461096b90611b50565b80156109b65780601f1061098d576101008083540402835291602001916109b6565b820191905f5260205f20905b81548152906001019060200180831161099957829003601f168201915b505050505081565b6109c9848484610526565b6105ae84848484610e58565b60606109e082610b61565b505f6109ea610f7e565b90505f815111610a085760405180602001604052805f815250610a33565b80610a1284610f8d565b604051602001610a23929190611d3c565b6040516020818303038152906040525b9392505050565b610a42610c82565b5f828152600d602052604090205460ff16151581151514610522575f828152600d6020526040808220805460ff19168415159081179091559051909184917fdea9cc6f564e4aef732c69c5920a2c13eabe87229e102e5a4bfe18779593179f9190a35050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b610add610c82565b6001600160a01b038116610b0657604051631e4fbdf760e01b81525f600482015260240161054b565b610b0f81610caf565b50565b5f6001600160e01b031982166380ac58cd60e01b1480610b4257506001600160e01b03198216635b5e139f60e01b145b8061045b57506301ffc9a760e01b6001600160e01b031983161461045b565b5f818152600260205260408120546001600160a01b03168061045b57604051637e27328960e01b81526004810184905260240161054b565b610631838383600161101d565b5f80610bb3858585611121565b90506001600160a01b0381161580610bd257506001600160a01b038516155b610c07575f848152600d602052604090205460ff16610c07576040516320800f0760e01b81526004810185905260240161054b565b6001600160a01b038516610c7a575f848152600e602090815260408083209051600f9392610c36929101611d6a565b60408051601f1981840301815291815281516020928301208352828201939093529082015f908120805460ff19169055868152600e909152908120610c7a9161165d565b949350505050565b600a546001600160a01b0316331461070a5760405163118cdaa760e01b815233600482015260240161054b565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f8282604051602001610d14929190611ddc565b60408051601f1981840301815291815281516020928301205f818152600f90935291205490915060ff1615610d625782828260405163886867a760e01b815260040161054b93929190611deb565b5f600b5f8154610d7190611e22565b91829055509050610d8285826111ec565b5f828152600f60209081526040808320805460ff19166001179055838352600e9091529020610db2848683611e3a565b505050505050565b6001600160a01b038216610dec57604051630b61174360e31b81526001600160a01b038316600482015260240161054b565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156105ae57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610e9a903390889087908790600401611ef4565b6020604051808303815f875af1925050508015610ed4575060408051601f3d908101601f19168201909252610ed191810190611f26565b60015b610f3b573d808015610f01576040519150601f19603f3d011682016040523d82523d5f602084013e610f06565b606091505b5080515f03610f3357604051633250574960e11b81526001600160a01b038516600482015260240161054b565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610f7757604051633250574960e11b81526001600160a01b038516600482015260240161054b565b5050505050565b6060600c805461046f90611b50565b60605f610f998361124d565b60010190505f8167ffffffffffffffff811115610fb857610fb86117c9565b6040519080825280601f01601f191660200182016040528015610fe2576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610fec57509392505050565b808061103157506001600160a01b03821615155b156110f2575f61104084610b61565b90506001600160a01b0383161580159061106c5750826001600160a01b0316816001600160a01b031614155b801561107f575061107d8184610aa8565b155b156110a85760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161054b565b81156110f05783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b5f8061112e858585611324565b90506001600160a01b03811661118a5761118584600880545f838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6111ad565b846001600160a01b0316816001600160a01b0316146111ad576111ad8185611416565b6001600160a01b0385166111c9576111c4846114a3565b610c7a565b846001600160a01b0316816001600160a01b031614610c7a57610c7a858561154a565b6001600160a01b03821661121557604051633250574960e11b81525f600482015260240161054b565b5f61122183835f610ba6565b90506001600160a01b03811615610631576040516339e3563760e11b81525f600482015260240161054b565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061128b5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106112b7576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106112d557662386f26fc10000830492506010015b6305f5e10083106112ed576305f5e100830492506008015b612710831061130157612710830492506004015b60648310611313576064830492506002015b600a831061045b5760010192915050565b5f828152600260205260408120546001600160a01b039081169083161561135057611350818486611598565b6001600160a01b0381161561138a5761136b5f855f8061101d565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b038516156113b8576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f611420836106b4565b5f83815260076020526040902054909150808214611471576001600160a01b0384165f9081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b505f9182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008545f906114b490600190611f41565b5f83815260096020526040812054600880549394509092849081106114db576114db611b88565b905f5260205f200154905080600883815481106114fa576114fa611b88565b5f91825260208083209091019290925582815260099091526040808220849055858252812055600880548061153157611531611f54565b600190038181905f5260205f20015f9055905550505050565b5f6001611556846106b4565b6115609190611f41565b6001600160a01b039093165f908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6115a38383836115fc565b610631576001600160a01b0383166115d157604051637e27328960e01b81526004810182905260240161054b565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161054b565b5f6001600160a01b03831615801590610c7a5750826001600160a01b0316846001600160a01b0316148061163557506116358484610aa8565b80610c7a5750505f908152600460205260409020546001600160a01b03908116911614919050565b50805461166990611b50565b5f825580601f10611678575050565b601f0160209004905f5260205f2090810190610b0f91905b808211156116a3575f8155600101611690565b5090565b6001600160e01b031981168114610b0f575f80fd5b5f602082840312156116cc575f80fd5b8135610a33816116a7565b5f5b838110156116f15781810151838201526020016116d9565b50505f910152565b5f81518084526117108160208601602086016116d7565b601f01601f19169290920160200192915050565b602081525f610a3360208301846116f9565b5f60208284031215611746575f80fd5b5035919050565b80356001600160a01b0381168114611763575f80fd5b919050565b5f8060408385031215611779575f80fd5b6117828361174d565b946020939093013593505050565b5f805f606084860312156117a2575f80fd5b6117ab8461174d565b92506117b96020850161174d565b9150604084013590509250925092565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611806576118066117c9565b604052919050565b5f67ffffffffffffffff831115611827576118276117c9565b61183a601f8401601f19166020016117dd565b905082815283838301111561184d575f80fd5b828260208301375f602084830101529392505050565b5f60208284031215611873575f80fd5b813567ffffffffffffffff811115611889575f80fd5b8201601f81018413611899575f80fd5b610c7a8482356020840161180e565b5f602082840312156118b8575f80fd5b610a338261174d565b5f8083601f8401126118d1575f80fd5b50813567ffffffffffffffff8111156118e8575f80fd5b6020830191508360208285010111156118ff575f80fd5b9250929050565b5f805f60408486031215611918575f80fd5b83359250602084013567ffffffffffffffff811115611935575f80fd5b611941868287016118c1565b9497909650939450505050565b5f82601f83011261195d575f80fd5b8135602067ffffffffffffffff821115611979576119796117c9565b8160051b6119888282016117dd565b92835284810182019282810190878511156119a1575f80fd5b83870192505b848310156119c0578235825291830191908301906119a7565b979650505050505050565b5f805f80606085870312156119de575f80fd5b843567ffffffffffffffff808211156119f5575f80fd5b611a018883890161194e565b95506020870135915080821115611a16575f80fd5b611a228883890161194e565b94506040870135915080821115611a37575f80fd5b50611a44878288016118c1565b95989497509550505050565b80358015158114611763575f80fd5b5f8060408385031215611a70575f80fd5b611a798361174d565b9150611a8760208401611a50565b90509250929050565b5f805f8060808587031215611aa3575f80fd5b611aac8561174d565b9350611aba6020860161174d565b925060408501359150606085013567ffffffffffffffff811115611adc575f80fd5b8501601f81018713611aec575f80fd5b611afb8782356020840161180e565b91505092959194509250565b5f8060408385031215611b18575f80fd5b82359150611a8760208401611a50565b5f8060408385031215611b39575f80fd5b611b428361174d565b9150611a876020840161174d565b600181811c90821680611b6457607f821691505b602082108103611b8257634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b601f82111561063157805f5260205f20601f840160051c81016020851015611bc15750805b601f840160051c820191505b81811015610f77575f8155600101611bcd565b815167ffffffffffffffff811115611bfa57611bfa6117c9565b611c0e81611c088454611b50565b84611b9c565b602080601f831160018114611c41575f8415611c2a5750858301515b5f19600386901b1c1916600185901b178555610db2565b5f85815260208120601f198616915b82811015611c6f57888601518255948401946001909101908401611c50565b5085821015611c8c57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561045b5761045b611c9c565b5f815180845260208085019450602084015f5b83811015611cf257815187529582019590820190600101611cd6565b509495945050505050565b6001600160a01b03841681526060602082018190525f90611d2090830185611cc3565b8281036040840152611d328185611cc3565b9695505050505050565b5f8351611d4d8184602088016116d7565b835190830190611d618183602088016116d7565b01949350505050565b5f808354611d7781611b50565b60018281168015611d8f5760018114611da457611dd0565b60ff1984168752821515830287019450611dd0565b875f526020805f205f5b85811015611dc75781548a820152908401908201611dae565b50505082870194505b50929695505050505050565b818382375f9101908152919050565b60408152826040820152828460608301375f606084830101525f6060601f19601f8601168301019050826020830152949350505050565b5f60018201611e3357611e33611c9c565b5060010190565b67ffffffffffffffff831115611e5257611e526117c9565b611e6683611e608354611b50565b83611b9c565b5f601f841160018114611e97575f8515611e805750838201355b5f19600387901b1c1916600186901b178355610f77565b5f83815260208120601f198716915b82811015611ec65786850135825560209485019460019092019101611ea6565b5086821015611ee2575f1960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f90611d32908301846116f9565b5f60208284031215611f36575f80fd5b8151610a33816116a7565b8181038181111561045b5761045b611c9c565b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220823853374d1a65cb088c4c4ec0d4347b08421e8ca8f6d9ee8247f84c6721ea6d64736f6c63430008180033`
	BmErc721ABI string = `[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"erc1155","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"string","name":"value","type":"string"},{"internalType":"bytes32","name":"dataHash","type":"bytes32"}],"name":"BmErc721DuplicatedDataHash","type":"error"},{"inputs":[{"internalType":"uint256","name":"sum","type":"uint256"},{"internalType":"uint256","name":"need","type":"uint256"}],"name":"BmErc721InvalidERC1155Value","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"}],"name":"BmErc721IsNotTransferable","type":"error"},{"inputs":[{"internalType":"string","name":"arg","type":"string"}],"name":"BmErc721NilInput","type":"error"},{"inputs":[],"name":"BmErc721ZeroERC1155ID","type":"error"},{"inputs":[],"name":"ERC721EnumerableForbiddenBatchMint","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"ERC721OutOfBoundsIndex","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenID","type":"uint256"},{"indexed":true,"internalType":"bool","name":"able","type":"bool"}],"name":"TransferAbleSet","type":"event"},{"inputs":[],"name":"BM_ERC1155","outputs":[{"internalType":"contract IERC1155","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINT_COST","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataHash","type":"bytes32"}],"name":"existed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnID","type":"uint256"},{"internalType":"string","name":"value","type":"string"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"burnIDs","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"string","name":"value","type":"string"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"bool","name":"able","type":"bool"}],"name":"setTransferable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"}],"name":"tokenData","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"}],"name":"transferable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]`
)

var Command = &cli.Command{
	Name: "deploy",
	Flags: []cli.Flag{
		flags.ConfigFlag,
		flags.ChainFlag,
		flags.KeyStoreDirFlag,
		flags.AccountFlag,
		flags.PasswordFileFlag,
	},
	Action: func(ctx *cli.Context) error {
		cfg, err := GetConfig(ctx)
		if err != nil {
			return err
		}
		// 1. node 연결
		client, err := ethclient.DialContext(ctx.Context, cfg.EndPoint.URL)
		if err != nil {
			return err
		}

		// 2. 컨트랙트 배포 키 준비
		owner, lock, err := cfg.GetAccount(ctx.Context, client)
		if err != nil {
			return err
		}
		defer lock()

		return Deploy(ctx.Context, client, owner)
	},
}

func Deploy(ctx context.Context, client utils.Backend, owner *bind.TransactOpts) error {
	// 3. bm-governance 컨트랙트 배포
	// bm-governance 에서 테스트를 위해 배포했던 스크립트 사용
	govContracts, err := gov.DeployBMGovernor(ctx, owner, client, 60e9,
		struct {
			Name   string
			Symbol string
		}{"Bang9Ming9 ERC20", "BM20"},
		struct {
			Name    string
			Version string
			Uri     string
		}{
			"Bang9Ming9 ERC1155", "1", "https://github.com/bang9ming9",
		},
		struct{ Name string }{
			"Bang9Ming9 Governance",
		},
	)
	if err != nil {
		return err
	}

	// 4. bm-erc721 컨트랙트 배포
	// 배포를 위해 bin, abi 는 solidity extention 을 사용하여 추출
	erc721ABI, err := abi.JSON(strings.NewReader(BmErc721ABI))
	if err != nil {
		return err
	}

	/* 4-1. 배포를 위한 생성자 데이터 셋팅
	 *  constructor(
	 *    address owner,
	 *    address erc1155,
	 *    string memory name,
	 *    string memory symbol
	 *  )
	 */
	constructorData, err := erc721ABI.Pack("",
		govContracts.Governor.Address(), // owner
		govContracts.Erc1155.Address(),  // erc1155
		"Bang9Ming9 ERC721",             // name
		"BM721",                         // symbol
	)
	if err != nil {
		return err
	}
	// 4-2. 배포 트랜잭션 전송 (to:nil, data: contract binary+constructorData)
	pool := utils.NewTxPool(client)
	if err := pool.Exec(utils.SendDynamicTx(client, owner, nil, append(common.FromHex(BmErc721Bin), constructorData...))); err != nil {
		return err
	}
	// 4-3. 배포 결과 조회
	var (
		erc721        *bind.BoundContract
		erc721Address common.Address
	)
	if receipts, err := pool.WaitMined(ctx); err != nil {
		return err
	} else {
		erc721Address = receipts[0].ContractAddress
		erc721 = bind.NewBoundContract(erc721Address, erc721ABI, client, client, client)
	}

	// 5. 배포 완료. 컨트랙트 정보 조회
	callOpts := &bind.CallOpts{Context: ctx}
	fmt.Println(strings.Repeat("==", 40))
	defer fmt.Println(strings.Repeat("==", 40))

	if name, err := govContracts.Governor.Funcs().Name(callOpts); err != nil {
		return err
	} else {
		fmt.Printf("-(%s)%s%-21s: %s\n", "BmGovernor", " ", name, govContracts.Governor.Address().Hex())
	}

	if name, err := govContracts.Erc20.Funcs().Name(callOpts); err != nil {
		return err
	} else {
		fmt.Printf("-(%s)%s%-21s: %s\n", "BmErc20", strings.Repeat(" ", 4), name, govContracts.Erc20.Address().Hex())
	}

	if domain, err := govContracts.Erc1155.Funcs().Eip712Domain(callOpts); err != nil {
		return err
	} else {
		fmt.Printf("-(%s)%s%-21s: %s\n", "BmErc1155", strings.Repeat(" ", 2), domain.Name, govContracts.Erc1155.Address().Hex())
	}

	var erc721Name string
	if err := erc721.Call(callOpts, &[]interface{}{&erc721Name}, "name"); err != nil {
		return err
	} else {
		fmt.Printf("-(%s)%s%-21s: %s\n", "BmErc721", strings.Repeat(" ", 3), erc721Name, erc721Address.Hex())
	}

	return nil
}
